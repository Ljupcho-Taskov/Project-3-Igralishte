import React, { useState } from "react";

interface AccordionProps {
  title: string;
  content: React.ReactNode;
}

const Accordion: React.FC<AccordionProps> = ({ title, content }) => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleAccordion = () => {
    setIsOpen((prev) => !prev);
  };

  return (
    <div className="container px-0 d-flex flex-column align-items-center">
      <div
        className={`row mb-3 ${isOpen ? "accordion-row1" : "accordion-row"}`}
      >
        <div
          className={`flex-column justify-content-center col-12 border text-center d-flex align-items-center ${
            isOpen ? "flex-column" : ""
          }`}
        >
          <svg
            onClick={toggleAccordion}
            className={`${isOpen ? "open-left-svg" : "accordion-svg-left"}`}
            xmlns="http://www.w3.org/2000/svg"
            width="30"
            height="30"
            viewBox="0 0 30 30"
            fill="none"
          >
            <path
              d="M26.1328 12.375C25.6523 11.8828 25.1719 11.3672 24.9609 10.875C24.75 10.3828 24.7617 9.76172 24.75 9.07031C24.7383 8.01562 24.7148 6.82031 23.9531 6.04687C23.1914 5.27344 21.9844 5.26172 20.9297 5.25C20.2383 5.23828 19.5938 5.22656 19.125 5.03906C18.6562 4.85156 18.1172 4.34766 17.625 3.86719C16.8398 3.11719 16.0312 2.34375 15 2.34375C13.9688 2.34375 13.1602 3.11719 12.375 3.86719C11.8828 4.34766 11.3672 4.82812 10.875 5.03906C10.3828 5.25 9.76172 5.23828 9.07031 5.25C8.01562 5.26172 6.82031 5.28516 6.04687 6.04687C5.27344 6.80859 5.26172 8.01562 5.25 9.07031C5.23828 9.76172 5.22656 10.4062 5.03906 10.875C4.85156 11.3438 4.34766 11.8828 3.86719 12.375C3.11719 13.1602 2.34375 13.9688 2.34375 15C2.34375 16.0312 3.11719 16.8398 3.86719 17.625C4.34766 18.1172 4.82812 18.6328 5.03906 19.125C5.25 19.6172 5.23828 20.2383 5.25 20.9297C5.26172 21.9844 5.28516 23.1797 6.04687 23.9531C6.80859 24.7266 8.01562 24.7383 9.07031 24.75C9.76172 24.7617 10.4062 24.7734 10.875 24.9609C11.3438 25.1484 11.8828 25.6523 12.375 26.1328C13.1602 26.8828 13.9688 27.6562 15 27.6562C16.0312 27.6562 16.8398 26.8828 17.625 26.1328C18.1172 25.6523 18.6328 25.1719 19.125 24.9609C19.6172 24.75 20.2383 24.7617 20.9297 24.75C21.9844 24.7383 23.1797 24.7148 23.9531 23.9531C24.7266 23.1914 24.7383 21.9844 24.75 20.9297C24.7617 20.2383 24.7734 19.5938 24.9609 19.125C25.1484 18.6562 25.6523 18.1172 26.1328 17.625C26.8828 16.8398 27.6562 16.0312 27.6562 15C27.6562 13.9688 26.8828 13.1602 26.1328 12.375ZM25.4531 16.9805C24.9258 17.5312 24.375 18.1055 24.0938 18.7734C23.8125 19.4414 23.8242 20.168 23.8125 20.918C23.8008 21.8789 23.7891 22.793 23.2852 23.2852C22.7812 23.7773 21.8789 23.8008 20.918 23.8125C20.168 23.8242 19.3945 23.8359 18.7734 24.0938C18.1523 24.3516 17.5312 24.9258 16.9805 25.4531C16.4297 25.9805 15.6562 26.7188 15 26.7188C14.3438 26.7188 13.6992 26.1094 13.0195 25.4531C12.3398 24.7969 11.8945 24.375 11.2266 24.0938C10.5586 23.8125 9.83203 23.8242 9.08203 23.8125C8.12109 23.8008 7.20703 23.7891 6.71484 23.2852C6.22266 22.7812 6.19922 21.8789 6.1875 20.918C6.17578 20.168 6.16406 19.3945 5.90625 18.7734C5.64844 18.1523 5.07422 17.5312 4.54688 16.9805C4.01953 16.4297 3.28125 15.6562 3.28125 15C3.28125 14.3438 3.89062 13.6992 4.54688 13.0195C5.20312 12.3398 5.625 11.8945 5.90625 11.2266C6.1875 10.5586 6.17578 9.83203 6.1875 9.08203C6.19922 8.12109 6.21094 7.20703 6.71484 6.71484C7.21875 6.22266 8.12109 6.19922 9.08203 6.1875C9.83203 6.17578 10.6055 6.16406 11.2266 5.90625C11.8477 5.64844 12.4688 5.07422 13.0195 4.54688C13.5703 4.01953 14.3438 3.28125 15 3.28125C15.6562 3.28125 16.3008 3.89062 16.9805 4.54688C17.6602 5.20312 18.1055 5.625 18.7734 5.90625C19.4414 6.1875 20.168 6.17578 20.918 6.1875C21.8789 6.19922 22.793 6.21094 23.2852 6.71484C23.7773 7.21875 23.8008 8.12109 23.8125 9.08203C23.8242 9.83203 23.8359 10.6055 24.0938 11.2266C24.3516 11.8477 24.9258 12.4688 25.4531 13.0195C25.9805 13.5703 26.7188 14.3438 26.7188 15C26.7188 15.6562 26.1094 16.3008 25.4531 16.9805ZM20.4961 11.8594C20.5812 11.9505 20.6275 12.0711 20.6253 12.1957C20.6231 12.3204 20.5726 12.4393 20.4844 12.5273L13.6055 19.0898C13.5152 19.1709 13.3987 19.2167 13.2773 19.2188C13.1592 19.2183 13.0458 19.1721 12.9609 19.0898L9.51562 15.8086C9.471 15.7655 9.43529 15.714 9.41055 15.6572C9.38581 15.6003 9.37251 15.5391 9.37142 15.477C9.37034 15.415 9.38148 15.3534 9.40421 15.2957C9.42694 15.2379 9.46082 15.1853 9.50391 15.1406C9.547 15.096 9.59845 15.0603 9.65534 15.0356C9.71223 15.0108 9.77344 14.9975 9.83546 14.9964C9.89749 14.9953 9.95912 15.0065 10.0168 15.0292C10.0746 15.0519 10.1272 15.0858 10.1719 15.1289L13.2773 18.1055L19.8281 11.8477C19.9192 11.7626 20.0398 11.7162 20.1645 11.7184C20.2891 11.7206 20.408 11.7712 20.4961 11.8594Z"
              fill="black"
            />
          </svg>
          {isOpen ? (
            <svg
              onClick={toggleAccordion}
              className="open-right-svg"
              xmlns="http://www.w3.org/2000/svg"
              width="29"
              height="28"
              viewBox="0 0 29 28"
              fill="none"
            >
              <rect
                width="19.6"
                height="19.6"
                transform="translate(0.541016 13.9243) rotate(-44.6871)"
                fill="#FDFDFD"
              />
              <path
                d="M19.5171 8.93957C19.6028 9.02619 19.6505 9.1433 19.6499 9.26513C19.6492 9.38696 19.6002 9.50354 19.5136 9.58922L15.0501 14.0042L19.4651 18.4677C19.5507 18.5543 19.5985 18.6714 19.5978 18.7932C19.5972 18.9151 19.5481 19.0317 19.4615 19.1173C19.3749 19.203 19.2578 19.2508 19.136 19.2501C19.0141 19.2494 18.8975 19.2004 18.8119 19.1138L14.3969 14.6503L9.93339 19.0653C9.84677 19.151 9.72966 19.1987 9.60783 19.1981C9.486 19.1974 9.36942 19.1484 9.28374 19.0617C9.19807 18.9751 9.15031 18.858 9.15097 18.7362C9.15164 18.6144 9.20067 18.4978 9.28729 18.4121L13.7508 13.9971L9.33579 9.53363C9.25011 9.44701 9.20235 9.3299 9.20301 9.20807C9.20368 9.08624 9.25272 8.96966 9.33933 8.88398C9.42595 8.7983 9.54306 8.75054 9.66489 8.75121C9.78672 8.75187 9.9033 8.80091 9.98898 8.88753L14.404 13.351L18.8675 8.93602C18.9541 8.85034 19.0712 8.80259 19.193 8.80325C19.3148 8.80392 19.4314 8.85295 19.5171 8.93957Z"
                fill="#504E21"
              />
            </svg>
          ) : (
            <svg
              onClick={toggleAccordion}
              className="accordion-svg-right"
              xmlns="http://www.w3.org/2000/svg"
              width="21"
              height="20"
              viewBox="0 0 21 20"
              fill="none"
            >
              <rect
                width="19.6"
                height="19.6"
                transform="translate(0.599609)"
                fill="#FDFDFD"
              />
              <path
                d="M17.5969 9.80039C17.5969 9.92222 17.5485 10.0391 17.4623 10.1252C17.3762 10.2114 17.2593 10.2598 17.1375 10.2598H10.8594V16.5379C10.8594 16.6597 10.811 16.7766 10.7248 16.8627C10.6387 16.9489 10.5218 16.9973 10.4 16.9973C10.2782 16.9973 10.1613 16.9489 10.0752 16.8627C9.98902 16.7766 9.94062 16.6597 9.94062 16.5379V10.2598H3.6625C3.54067 10.2598 3.42382 10.2114 3.33767 10.1252C3.25152 10.0391 3.20313 9.92222 3.20312 9.80039C3.20312 9.67856 3.25152 9.56171 3.33767 9.47556C3.42382 9.38941 3.54067 9.34101 3.6625 9.34101H9.94062V3.06289C9.94062 2.94106 9.98902 2.82421 10.0752 2.73806C10.1613 2.65191 10.2782 2.60352 10.4 2.60352C10.5218 2.60352 10.6387 2.65191 10.7248 2.73806C10.811 2.82421 10.8594 2.94106 10.8594 3.06289V9.34101H17.1375C17.2593 9.34101 17.3762 9.38941 17.4623 9.47556C17.5485 9.56171 17.5969 9.67856 17.5969 9.80039Z"
                fill="#504E21"
              />
            </svg>
          )}
          <div className="accordion-header" onClick={toggleAccordion}>
            <h3 className={`accordion-title ${isOpen ? "mb-3" : ""}`}>
              {title}
            </h3>
          </div>
          {isOpen && (
            <div className="accordion-content accordion-p ">{content}</div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Accordion;
