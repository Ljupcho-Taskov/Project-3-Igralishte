import React, { useEffect, useState } from "react";
import Header from "../../components/header/Header";
import Footer from "../../components/footer/Footer";
import { CardsPriceType, GiftCardsType } from "../../types/types";
import { GetServerSideProps, NextPage } from "next";
import router from "next/router";
import { useCart } from "../../context/CartContext";
import Head from "next/head";

interface Props {
  dataGiftCards: GiftCardsType[];
  dataCardsPrice: CardsPriceType[];
  dataCardPrice: CardsPriceType;
}

const GiftCardPage: NextPage<Props> = ({ dataCardsPrice }) => {
  const { priceCard, addPriceToCart } = useCart();

  const [buttonStates, setButtonStates] = useState<{ [key: string]: boolean }>(
    {}
  );

  const [hoveredButton, setHoveredButton] = useState<string | null>(null);

  useEffect(() => {
    const newButtonStates: { [key: string]: boolean } = {};

    dataCardsPrice.forEach((price) => {
      if (price && price.id) {
        newButtonStates[price.id] = priceCard.some(
          (cartItem) => cartItem && cartItem.id === price.id
        );
      }
    });

    setButtonStates(newButtonStates);
  }, [dataCardsPrice, priceCard]);

  const handleAddToCart = (priceId: string) => {
    const selectedPrice = dataCardsPrice.find((price) => price.id === priceId);

    if (selectedPrice && !buttonStates[priceId]) {
      addPriceToCart(selectedPrice);
      setButtonStates((prev) => ({ ...prev, [priceId]: true }));
    }
  };

  const handleGoToCart = () => {
    router.push({
      pathname: "/order",
      query: { cart: true },
    });
  };

  return (
    <>
      <Head>
        <title>Igralishte</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <section className="giftCard-section">
        <h3 className="py-3">Gift картички за подарок</h3>
        <div className="container">
          <div className="row">
            <div className="col-12 mb-3">
              <div className="partyGirlImg">
                <img src="images/604eee326a61e796f4565a69fd3244b5.jpg" alt="" />
                <p className="partyGirl">
                  <span
                    style={{ position: "absolute", left: "20px" }}
                    className=""
                  >
                    Partygirl Gift card
                  </span>
                  <span className="svg-party">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="45"
                      height="44"
                      viewBox="0 0 45 44"
                      fill="none"
                    >
                      <path
                        d="M26.725 23.4138L44.1838 21.6544L26.725 19.895L37.8228 6.36098L24.2888 17.4589L22.5294 0L20.77 17.4589L7.23598 6.36098L18.3339 19.895L0.875 21.6544L18.3339 23.4138L7.23598 36.9478L20.77 25.85L22.5294 43.3088L24.2888 25.85L37.8228 36.9478L26.725 23.4138Z"
                        fill="#504E21"
                      />
                    </svg>
                  </span>
                </p>
              </div>
            </div>
            <div className="col-12 mb-3">
              <div className="vintageGirlImg">
                <img src="images/86b1c316d78e16b01bd6848acf94bef0.jpg" alt="" />
                <p className="vintageGirl">
                  <span className="svg-vintage">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="45"
                      height="44"
                      viewBox="0 0 45 44"
                      fill="none"
                    >
                      <path
                        d="M26.725 23.4138L44.1838 21.6544L26.725 19.895L37.8228 6.36098L24.2888 17.4589L22.5294 0L20.77 17.4589L7.23598 6.36098L18.3339 19.895L0.875 21.6544L18.3339 23.4138L7.23598 36.9478L20.77 25.85L22.5294 43.3088L24.2888 25.85L37.8228 36.9478L26.725 23.4138Z"
                        fill="#504E21"
                      />
                    </svg>
                  </span>
                  <span style={{ position: "absolute", right: "20px;" }}>
                    Vintage chick Gift card
                  </span>
                </p>
              </div>
            </div>
            <div className="col-12 mb-3">
              <div className="wavyGirlImg">
                <img src="images/c54dfa1aacec436225c6a3d100b58b76.jpg" alt="" />
                <p className="wavyGirl">
                  <span style={{ position: "absolute", left: "20px;" }}>
                    Wavy baby Gift card
                  </span>
                  <span className="svg-wavy">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="45"
                      height="44"
                      viewBox="0 0 45 44"
                      fill="none"
                    >
                      <path
                        d="M26.725 23.4138L44.1838 21.6544L26.725 19.895L37.8228 6.36098L24.2888 17.4589L22.5294 0L20.77 17.4589L7.23598 6.36098L18.3339 19.895L0.875 21.6544L18.3339 23.4138L7.23598 36.9478L20.77 25.85L22.5294 43.3088L24.2888 25.85L37.8228 36.9478L26.725 23.4138Z"
                        fill="#504E21"
                      />
                    </svg>
                  </span>
                </p>
              </div>
            </div>
          </div>
          <div className="row">
            {dataCardsPrice.map((price) => (
              <div
                className="col-12"
                key={price.id}
                onMouseEnter={() => setHoveredButton(price.id)}
                onMouseLeave={() => setHoveredButton(null)}
              >
                {!buttonStates[price.id] ? (
                  <>
                    <button
                      className="buttonPrice mb-3"
                      onClick={() => handleAddToCart(price.id)}
                    >
                      {hoveredButton === price.id ? (
                        <>
                          <span className="buttonPriceSpan">
                            Додај во кошничка
                          </span>
                        </>
                      ) : (
                        <span className="buttonPriceSpan">{price.price}</span>
                      )}
                    </button>
                  </>
                ) : (
                  <>
                    <button
                      className="buttonPriceClick mb-3"
                      onClick={handleGoToCart}
                    >
                      <span className="btnSpanStars">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="122"
                          height="29"
                          viewBox="0 0 122 29"
                          fill="none"
                        >
                          <path
                            d="M26.3138 16.6686C20.3278 15.4992 15.5099 8.35033 16.6656 2.36163L16.6697 2.3405C16.6691 2.34375 16.6681 2.34742 16.6675 2.35067C16.6682 2.34696 16.6686 2.34366 16.6693 2.33994L16.6652 2.36085C15.4816 8.3447 8.32796 13.1549 2.34194 11.9855C8.3351 13.1563 13.1575 20.3202 11.9867 26.3134C13.1575 20.3202 20.3214 15.4978 26.3146 16.6686L26.3138 16.6686Z"
                            fill="url(#paint0_linear_1035_1596)"
                          />
                          <path
                            d="M117.659 6.26676C114.53 8.32799 109.342 7.26339 107.273 4.13885L107.266 4.1278C107.267 4.1295 107.268 4.13152 107.269 4.13322C107.268 4.13128 107.267 4.12966 107.266 4.12772L107.273 4.13865C109.327 7.27308 108.257 12.46 105.128 14.5212C108.261 12.4575 113.457 13.5268 115.521 16.6598C113.457 13.5268 114.527 8.33014 117.66 6.26646L117.659 6.26676Z"
                            fill="url(#paint1_linear_1035_1596)"
                          />
                          <defs>
                            <linearGradient
                              id="paint0_linear_1035_1596"
                              x1="0.444998"
                              y1="-0.829473"
                              x2="30.7536"
                              y2="10.4743"
                              gradientUnits="userSpaceOnUse"
                            >
                              <stop offset="0.0389507" stopColor="#FFF0BF" />
                              <stop offset="0.289254" stopColor="#EFC990" />
                              <stop offset="0.512668" stopColor="#FDD292" />
                              <stop
                                offset="0.836534"
                                stopColor="#F0C749"
                                stop-opacity="0.42"
                              />
                              <stop offset="1" stopColor="#D4AF37" />
                            </linearGradient>
                            <linearGradient
                              id="paint1_linear_1035_1596"
                              x1="98.7842"
                              y1="9.7144"
                              x2="116.943"
                              y2="1.63971"
                              gradientUnits="userSpaceOnUse"
                            >
                              <stop offset="0.0389507" stopColor="#FFF0BF" />
                              <stop offset="0.289254" stopColor="#EFC990" />
                              <stop offset="0.512668" stopColor="#FDD292" />
                              <stop
                                offset="0.836534"
                                stopColor="#F0C749"
                                stop-opacity="0.42"
                              />
                              <stop offset="1" stopColor="#D4AF37" />
                            </linearGradient>
                          </defs>
                        </svg>
                      </span>
                      <span className="added">Додадено</span>
                      <span className="goToCart">кон кошничката →</span>
                    </button>
                  </>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>
      <Footer />
    </>
  );
};

export default GiftCardPage;

export const getServerSideProps: GetServerSideProps = async () => {
  const resGiftCards = await fetch("http://localhost:5001/giftCards");
  const dataGiftCards: GiftCardsType[] = await resGiftCards.json();

  const resCardsPrice = await fetch("http://localhost:5001/priceCards");
  const dataCardsPrice: CardsPriceType[] = await resCardsPrice.json();

  return {
    props: { dataGiftCards, dataCardsPrice },
  };
};
