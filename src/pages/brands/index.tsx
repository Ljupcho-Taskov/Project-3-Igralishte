import React, { useEffect, useState } from "react";
import { NextPage, GetServerSideProps } from "next";
import { useRouter } from "next/router";
import Header from "../../components/header/Header";
import Footer from "../../components/footer/Footer";
import BrandItem from "../../components/BrandItem";
import Pagination from "../../components/Pagination";
import { ProductsType } from "../../types/types";
import Card from "../../components/Card";
import Head from "next/head";

interface BrandsPageProps {
  brandsData: ProductsType[];
  productsData: ProductsType[];
  currentPage: number;
  totalPages: number;
}

const BrandsPage: NextPage<BrandsPageProps> = ({
  brandsData,
  productsData,
}) => {
  const router = useRouter();
  const { brand, category } = router.query;

  const [currentPage, setCurrentPage] = useState(1);
  const [headerText, setHeaderText] = useState<string>("Pocetna > All");

  const productsPerPage = 10;

  const indexOfLastProduct = currentPage * productsPerPage;
  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;
  const currentProducts = brandsData.slice(
    indexOfFirstProduct,
    indexOfLastProduct
  );

  const totalPages = Math.ceil(brandsData.length / productsPerPage);

  const handleNextPage = () => {
    setCurrentPage((prev) => Math.min(prev + 1, totalPages));
  };

  const handlePrevPage = () => {
    setCurrentPage((prev) => Math.max(prev - 1, 1));
  };

  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };

  useEffect(() => {
    const headerBrand = brand ? `${brand} > ` : "";
    const headerCategory = category || "All";
    setHeaderText(`Pocetna > ${headerBrand}${headerCategory}`);
  }, [brand, category]);
  const headerBrand = brand ? brand : "";
  const headerCategory = category || "All";
  const filteredProducts = productsData.filter(
    (product) => product.brand === category
  );

  return (
    <>
      <Head>
        <title>Igralishte</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section className="contact-section">
        <Header />
        <div className="container py-3 mb-4">
          <div className="row mb-3">
            <div className="col-12">
              <p>
                <span className="mr-1">Почетна</span>

                <i className="fa-solid fa-angle-right"></i>

                <span className="ml-1">За Нас</span>
              </p>
            </div>
          </div>

          <div className="row mb-3">
            <div className="col d-flex align-items-center justify-content-center">
              <h2 className="us">Контакт</h2>
              <div className="us-image"></div>
            </div>
          </div>

          <div className="row mb-5">
            <div className="col rounded-image">
              <div className="rounded-image-inner rounded-image-inner-contact "></div>
            </div>
          </div>
          <div className="row">
            <div className="col-12 mb-4">
              <h2 className="we">Игралиште Дебар Маало</h2>
            </div>
            <div className="col-12 mb-4">
              <p className="desc-text text-center w-100">
                Откриј ги нашите останати модни парчиња и колекции кои ги немаме
                изложено на нашата страна!
              </p>
            </div>
            <div className="col-12 mb-4">
              <p className="adress-text w-100">
                Костурски Херои бр.6/14 Дебар Маало, Скопје
              </p>
            </div>
            <div className="col-12 contact mb-4">
              <h2>Телефон за контакт:</h2>
              <p className="text-center w-100">+ 389 078 380 406</p>
            </div>
            <div className="col-12 contact mb-5">
              <h2>Работно Време:</h2>
              <p className="text-center w-100">
                Понеделник - Петок 12:00 - 19:00
              </p>
              <p className="text-center w-100">Сабота 12:00 - 17:00</p>
            </div>
            <div className="col-12 text-center">
              <button>Кон продавницата</button>
            </div>
          </div>
        </div>

        <Footer />
      </section>
      <Header />
      <div className="container py-3 w-90">
        <div className="row mb-3">
          <div className="col-12">
            <p>
              {`Pocetna`}
              <i
                className={headerBrand ? "mx-2 fa-solid fa-angle-right" : ""}
              ></i>
              {headerBrand}
              <i
                className={headerCategory ? "mx-2 fa-solid fa-angle-right" : ""}
              ></i>
              {headerCategory}
            </p>
          </div>
        </div>
        <div className="row py-4">
          <div className="col-12 d-flex  align-items-center">
            <div className="faq-sparks"></div>
            <h2 className="faq-header">{headerCategory}</h2>
          </div>
        </div>
        <div className="row">
          {currentProducts.map((item) => (
            <BrandItem key={item.id} {...item} />
          ))}
        </div>
        {filteredProducts.length > 0 ? (
          <div className="row my-3">
            <div className="col-12 py-5">
              <p className="other-brands">Парчиња од брендот:</p>
            </div>
            {filteredProducts.map((item, index) => (
              <Card index={index} key={item.id} {...item} />
            ))}
          </div>
        ) : null}
        <Pagination
          currentPage={currentPage}
          totalPages={totalPages}
          handlePageChange={handlePageChange}
          handlePrevPage={handlePrevPage}
          handleNextPage={handleNextPage}
        />
      </div>
      <Footer />
    </>
  );
};

export default BrandsPage;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let brandsRes: Response;
  let productsRes: Response;

  if (query.category) {
    brandsRes = await fetch(`http://localhost:5001/brands?q=${query.category}`);
    productsRes = await fetch(
      `http://localhost:5001/products?q=${query.category}`
    );
  } else {
    brandsRes = await fetch("http://localhost:5001/brands");
    productsRes = await fetch("http://localhost:5001/products");
  }

  const brandsData: ProductsType[] = await brandsRes.json();
  const productsData: ProductsType[] = await productsRes.json();

  return {
    props: { brandsData, productsData },
  };
};
